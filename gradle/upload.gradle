apply plugin: 'maven'

/**
 * ----------------------- 分界线一下是上传到nexus的配置 -----------------------------
 */
def RELEASE_REPOSITORY_URL = 'http://nexus.yodo1.com:8081/repository/Yodo1SDK'
def NEXUS_USERNAME = 'admin'
def NEXUS_PASSWORD = 'yodo1pwd'

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                /**
                 * 读取库级gradle.properties
                 */
                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID
                pom.version = VERSION_NAME
                repository(url: RELEASE_REPOSITORY_URL) {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
                snapshotRepository(url: RELEASE_REPOSITORY_URL) {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
            }
        }
    }
}

/**
 * --------------------- 以下task是nexus和bintray上传时执行的公共task ----------------------
 */

/**
 * 生成jarDoc的task
 */
task androidJavadocs(type: Javadoc) {
    failOnError false
    options.encoding = 'utf-8'
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

/**
 * 生成javaDoc对应的jar的task
 */
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

/**
 * 生成jar包的task
 */
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
